/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

public class App {
    public String getGreeting() {
        return "Hello World!";

    }

    public static void main(String[] args) {
        // Object of graph is created.
        Graph<Integer> g = new Graph<Integer>();
        Node node=new Node(1);
        Node node2=new Node(2);
        Node node3=new Node(3);
        Node node4=new Node(4);
        Node node5=new Node(5);


        // edges are added.
        // Since the graph is bidirectional,
        // so boolean bidirectional is passed as true.
        g.addNode(1);
        g.addNode(2);
        g.addNode(3);
        g.addNode(4);
        g.addNode(5);

        g.addEdge(1, 2, 5);
//        g.addEdge(0, 4, true);
//        g.addEdge(1, 2, true);
//        g.addEdge(1, 3, true);
//        g.addEdge(1, 4, true);
//        g.addEdge(2, 3, true);
//        g.addEdge(3, 4, true);

        // print the graph.
//        System.out.println("Graph:\n"
//                + g.toString());
//
//        // gives the no of vertices in the graph.
//        g.getVertexCount();
//
//        // gives the no of edges in the graph.
//        g.getEdgesCount(true);
//
//        // tells whether the edge is present or not.
//        g.hasEdge(3, 4);
//
//        // tells whether vertex is present or not
//        g.hasVertex(5);
    }


    public static void sortArray(int[] arr){
        int num=0;
        for(int i=0;i<arr.length;i++){
            for(int j=1+i;j<arr.length-1;j++){
                if(arr[i]>arr[j]){
                    num=arr[i];
                    arr[i]=arr[j];
                    arr[j]=num;
                }
            }
        }
        for(int i=0;i<arr.length;i++){
            System.out.println(arr[i]);

        }
    }
}
