/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linkedListt;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }
    @Test public void addFirstTest() {
        SlinkedList  classUnderTest = new SlinkedList ();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);

        assertEquals("head->[5]->[6]->[7]->x",classUnderTest.printLnkedList());
    }

    @Test public void insertBeforMiddleTest() {
        SlinkedList  classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);


        assertEquals("head->[5]->[8]->[6]->[7]->x",classUnderTest.insertBefore(6,8));

    }
    @Test public void insertBeforFirstNodeTest() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);


        assertEquals("head->[8]->[5]->[6]->[7]->x",classUnderTest.insertBefore(5,8));
    }

    @Test public void insertAfterMdlleNodeTest() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);


        assertEquals("head->[5]->[6]->[8]->[7]->x",classUnderTest.insertAfter(6,8));
    }
    @Test public void insertAfterLastNodeTest() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);


        assertEquals("head->[5]->[6]->[7]->[8]->x",classUnderTest.insertAfter(7,8));
    }
    // _____________________________________________{{{{code Chaleng 07}}}}

    @Test public void kGreater() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);
        classUnderTest.append(9);
        classUnderTest.append(10);


        assertEquals("Exeption",classUnderTest.returnValue(8));
    }
    @Test public void kSame() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);
        classUnderTest.append(9);
        classUnderTest.append(10);


        assertEquals("5",classUnderTest.returnValue(4));
    }
    @Test public void negativeK() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);
        classUnderTest.append(9);
        classUnderTest.append(10);


        assertEquals("Exeption",classUnderTest.returnValue(-4));
    }
    @Test public void returnValueTestTow() {
        SlinkedList classUnderTest = new SlinkedList();
//        classUnderTest.append(5);
        classUnderTest.append(7);
        assertEquals("7",classUnderTest.returnValue(0));
    }
    @Test public void linkedSizeOne() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(7);
        assertEquals("7",classUnderTest.returnValue(0));
    }
    @Test public void kInMiddle() {
        SlinkedList classUnderTest = new SlinkedList();
        classUnderTest.append(5);
        classUnderTest.append(6);
        classUnderTest.append(7);
        classUnderTest.append(9);
        classUnderTest.append(10);


        assertEquals("7",classUnderTest.returnValue(2));
    }
    // _____________________________________________{{{{code Chaleng 07}}}}

}
