/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package getEdges;

import org.junit.Test;
import static org.junit.Assert.*;

public class AppTest {
    @Test public void testOne() {
        AddEdge edge=new AddEdge();
        Node Pandora=new Node("Pandora");
        Node Metroville=new Node("Metroville");
        Node Arendelle=new Node("Arendelle");
        Node Naboo=new Node("Naboo");
        Node Narnia=new Node("Narnia");
        Node NewMonstropolis=new Node("New Monstropolis");

        edge.addNode(Pandora);
        edge.addNode(Arendelle);
        edge.addNode(Metroville);
        edge.addNode(Naboo);
        edge.addNode(NewMonstropolis);
        edge.addNode(Narnia);


        edge.addEdge(Pandora,Metroville,150);
        edge.addEdge(Metroville,Naboo,160);
        edge.addEdge(Narnia,NewMonstropolis,170);
        edge.addEdge(Arendelle,Naboo,180);
        edge.addEdge(Naboo,Narnia,190);

        Node [] array={Pandora,Metroville,Naboo};
        assertEquals("true , 310", edge.edgeContain(array));
        Node [] arrayTow={Pandora,Metroville,Narnia};

        assertEquals("false", edge.edgeContain(arrayTow));
    }
    @Test public void testTow() {
        AddEdge edge=new AddEdge();
        Node Pandora=new Node("Pandora");
        Node Metroville=new Node("Metroville");
        Node Arendelle=new Node("Arendelle");
        Node Naboo=new Node("Naboo");
        Node Narnia=new Node("Narnia");
        Node NewMonstropolis=new Node("New Monstropolis");

        edge.addNode(Pandora);
        edge.addNode(Arendelle);
        edge.addNode(Metroville);
        edge.addNode(Naboo);
        edge.addNode(NewMonstropolis);
        edge.addNode(Narnia);


        edge.addEdge(Pandora,Metroville,150);
        edge.addEdge(Metroville,Naboo,160);
        edge.addEdge(Narnia,NewMonstropolis,170);
        edge.addEdge(Arendelle,Naboo,180);
        edge.addEdge(Naboo,Narnia,190);

        Node [] array={Pandora,Metroville};
        assertEquals("true , 150", edge.edgeContain(array));
        Node [] arrayTow={Pandora,Metroville};

        assertEquals("true , 150", edge.edgeContain(arrayTow));
    }
    @Test public void testThree() {
        AddEdge edge=new AddEdge();
        Node Pandora=new Node("Pandora");
        Node Metroville=new Node("Metroville");
        Node Arendelle=new Node("Arendelle");


        edge.addNode(Pandora);
        edge.addNode(Arendelle);

        edge.addEdge(Pandora,Metroville,150);

        Node [] array={Pandora,Metroville};
        assertEquals("true , 150", edge.edgeContain(array));
        Node [] arrayTow={};

        assertEquals("false", edge.edgeContain(arrayTow));
    }
}
