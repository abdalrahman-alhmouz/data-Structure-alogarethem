/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TreeIntersection;

import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.*;

public class AppTest {
    @Test public void testAppHasAGreeting() {

        TreeIntersection treeOne=new TreeIntersection();
        Node nodeOne=new Node(10);
        Node nodeTow=new Node(15);
        treeOne.addNode(nodeOne,6);
        treeOne.addNode(nodeOne,15);
        treeOne.addNode(nodeOne,8);
        treeOne.addNode(nodeOne,7);
        treeOne.addNode(nodeOne,4);
        treeOne.addNode(nodeOne,2);

        treeOne.addNode(nodeTow,6);
        treeOne.addNode(nodeTow,5);
        treeOne.addNode(nodeTow,56);
        treeOne.addNode(nodeTow,9);
        treeOne.addNode(nodeTow,8);
        treeOne.addNode(nodeTow,15);
        treeOne.addNode(nodeTow,2);
        treeOne.addNode(nodeTow,1);
        treeOne.addNode(nodeTow,30);

        assertEquals(Arrays.asList(2, 8, 6, 15),treeOne.treeIntersection(nodeOne,nodeTow));
    }

    @Test public void testTow() {

        TreeIntersection treeOne=new TreeIntersection();
        Node nodeOne=new Node(10);
        Node nodeTow=new Node(15);
        treeOne.addNode(nodeOne,6);
        treeOne.addNode(nodeOne,15);
        treeOne.addNode(nodeOne,8);
        treeOne.addNode(nodeOne,7);
        treeOne.addNode(nodeOne,4);
        treeOne.addNode(nodeOne,2);

        treeOne.addNode(nodeTow,6);

        assertEquals(Arrays.asList(6),treeOne.treeIntersection(nodeOne,nodeTow));
    }

    @Test public void testThree() {

        TreeIntersection treeOne=new TreeIntersection();
        Node nodeOne=new Node(10);
        Node nodeTow=new Node(31);
        treeOne.addNode(nodeOne,6);
        treeOne.addNode(nodeOne,15);
        treeOne.addNode(nodeOne,8);
        treeOne.addNode(nodeOne,7);
        treeOne.addNode(nodeOne,4);
        treeOne.addNode(nodeOne,2);

        treeOne.addNode(nodeTow,60);
        treeOne.addNode(nodeTow,50);
        treeOne.addNode(nodeTow,56);
        treeOne.addNode(nodeTow,90);
        treeOne.addNode(nodeTow,80);
        treeOne.addNode(nodeTow,150);
        treeOne.addNode(nodeTow,20);

        assertEquals(Arrays.asList(),treeOne.treeIntersection(nodeOne,nodeTow));
    }
}
